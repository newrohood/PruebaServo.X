

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jun 01 17:23:05 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Version 2.40
    19                           ; Generated 04/07/2022 GMT
    20                           ; 
    21                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4550 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     
    54                           	psect	idataCOMRAM
    55   0000D4                     __pidataCOMRAM:
    56                           	callstack 0
    57                           
    58                           ;initializer for _a
    59   0000D4  007D               	dw	125
    60   000000                     _TMR1ON	set	32360
    61   000000                     _GIE	set	32663
    62   000000                     _TRISC2	set	31906
    63   000000                     _CCPR1	set	4030
    64   000000                     _TMR1	set	4046
    65   000000                     _CCP1CON	set	4029
    66   000000                     _T1CON	set	4045
    67   000000                     _TMR1IE	set	31976
    68   000000                     _TMR1IF	set	31984
    69   000000                     _PEIE	set	32662
    70                           
    71                           ; #config settings
    72                           
    73                           	psect	cinit
    74   000092                     __pcinit:
    75                           	callstack 0
    76   000092                     start_initialization:
    77                           	callstack 0
    78   000092                     __initialization:
    79                           	callstack 0
    80                           
    81                           ; Initialize objects allocated to COMRAM (2 bytes)
    82                           ; load TBLPTR registers with __pidataCOMRAM
    83   000092  0ED4               	movlw	low __pidataCOMRAM
    84   000094  6EF6               	movwf	tblptrl,c
    85   000096  0E00               	movlw	high __pidataCOMRAM
    86   000098  6EF7               	movwf	tblptrh,c
    87   00009A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    88   00009C  6EF8               	movwf	tblptru,c
    89   00009E  0009               	tblrd		*+	;fetch initializer
    90   0000A0  CFF5 F001          	movff	tablat,__pdataCOMRAM
    91   0000A4  0009               	tblrd		*+	;fetch initializer
    92   0000A6  CFF5 F002          	movff	tablat,__pdataCOMRAM+1
    93   0000AA                     end_of_initialization:
    94                           	callstack 0
    95   0000AA                     __end_of__initialization:
    96                           	callstack 0
    97   0000AA  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    98   0000AC  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    99   0000AE  0100               	movlb	0
   100   0000B0  EF09  F000         	goto	_main	;jump to C main() function
   101                           
   102                           	psect	dataCOMRAM
   103   000001                     __pdataCOMRAM:
   104                           	callstack 0
   105   000001                     _a:
   106                           	callstack 0
   107   000001                     	ds	2
   108                           
   109                           	psect	cstackCOMRAM
   110   000003                     __pcstackCOMRAM:
   111                           	callstack 0
   112   000003                     ??_main:
   113   000003                     
   114                           ; 1 bytes @ 0x0
   115   000003                     	ds	2
   116                           
   117 ;;
   118 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   119 ;;
   120 ;; *************** function _main *****************
   121 ;; Defined at:
   122 ;;		line 7 in file "PruebaServo.c"
   123 ;; Parameters:    Size  Location     Type
   124 ;;		None
   125 ;; Auto vars:     Size  Location     Type
   126 ;;		None
   127 ;; Return value:  Size  Location     Type
   128 ;;                  1    wreg      void 
   129 ;; Registers used:
   130 ;;		wreg, status,2
   131 ;; Tracked objects:
   132 ;;		On entry : 0/0
   133 ;;		On exit  : 0/0
   134 ;;		Unchanged: 0/0
   135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   136 ;;      Params:         0       0       0       0       0       0       0       0       0
   137 ;;      Locals:         0       0       0       0       0       0       0       0       0
   138 ;;      Temps:          2       0       0       0       0       0       0       0       0
   139 ;;      Totals:         2       0       0       0       0       0       0       0       0
   140 ;;Total ram usage:        2 bytes
   141 ;; Hardware stack levels required when called: 1
   142 ;; This function calls:
   143 ;;		Nothing
   144 ;; This function is called by:
   145 ;;		Startup code after reset
   146 ;; This function uses a non-reentrant model
   147 ;;
   148                           
   149                           	psect	text0
   150   000012                     __ptext0:
   151                           	callstack 0
   152   000012                     _main:
   153                           	callstack 30
   154                           
   155                           ;PruebaServo.c: 8: TRISC2=0;
   156                           
   157                           ;incstack = 0
   158   000012  9494               	bcf	3988,2,c	;volatile
   159                           
   160                           ;PruebaServo.c: 9: TMR1=60536;
   161   000014  0EEC               	movlw	236
   162   000016  6ECF               	movwf	207,c	;volatile
   163   000018  0E78               	movlw	120
   164   00001A  6ECE               	movwf	206,c	;volatile
   165                           
   166                           ;PruebaServo.c: 10: T1CON=0b10000000;
   167   00001C  0E80               	movlw	128
   168   00001E  6ECD               	movwf	205,c	;volatile
   169                           
   170                           ;PruebaServo.c: 11: CCPR1=60536+125;
   171   000020  0EEC               	movlw	236
   172   000022  6EBF               	movwf	191,c	;volatile
   173   000024  0EF5               	movlw	245
   174   000026  6EBE               	movwf	190,c	;volatile
   175                           
   176                           ;PruebaServo.c: 12: CCP1CON=0b00001001;
   177   000028  0E09               	movlw	9
   178   00002A  6EBD               	movwf	189,c	;volatile
   179                           
   180                           ;PruebaServo.c: 13: TMR1IF=0;
   181   00002C  909E               	bcf	3998,0,c	;volatile
   182                           
   183                           ;PruebaServo.c: 14: TMR1IE=1;
   184   00002E  809D               	bsf	3997,0,c	;volatile
   185                           
   186                           ;PruebaServo.c: 15: PEIE=1;
   187   000030  8CF2               	bsf	4082,6,c	;volatile
   188                           
   189                           ;PruebaServo.c: 16: GIE=1;
   190   000032  8EF2               	bsf	4082,7,c	;volatile
   191                           
   192                           ;PruebaServo.c: 17: TMR1ON=1;
   193   000034  80CD               	bsf	4045,0,c	;volatile
   194   000036                     l29:
   195                           
   196                           ;PruebaServo.c: 19: a=125;
   197   000036  0E00               	movlw	0
   198   000038  6E02               	movwf	(_a+1)^0,c
   199   00003A  0E7D               	movlw	125
   200   00003C  6E01               	movwf	_a^0,c
   201                           
   202                           ;PruebaServo.c: 20: _delay((unsigned long)((2000)*(1000000/4000.0)));
   203   00003E  0E03               	movlw	3
   204   000040  6E04               	movwf	(??_main+1)^0,c
   205   000042  0E8A               	movlw	138
   206   000044  6E03               	movwf	??_main^0,c
   207   000046  0E56               	movlw	86
   208   000048                     u17:
   209   000048  2EE8               	decfsz	wreg,f,c
   210   00004A  D7FE               	bra	u17
   211   00004C  2E03               	decfsz	??_main^0,f,c
   212   00004E  D7FC               	bra	u17
   213   000050  2E04               	decfsz	(??_main+1)^0,f,c
   214   000052  D7FA               	bra	u17
   215                           
   216                           ;PruebaServo.c: 21: a=375;
   217   000054  0E01               	movlw	1
   218   000056  6E02               	movwf	(_a+1)^0,c
   219   000058  0E77               	movlw	119
   220   00005A  6E01               	movwf	_a^0,c
   221                           
   222                           ;PruebaServo.c: 22: _delay((unsigned long)((2000)*(1000000/4000.0)));
   223   00005C  0E03               	movlw	3
   224   00005E  6E04               	movwf	(??_main+1)^0,c
   225   000060  0E8A               	movlw	138
   226   000062  6E03               	movwf	??_main^0,c
   227   000064  0E56               	movlw	86
   228   000066                     u27:
   229   000066  2EE8               	decfsz	wreg,f,c
   230   000068  D7FE               	bra	u27
   231   00006A  2E03               	decfsz	??_main^0,f,c
   232   00006C  D7FC               	bra	u27
   233   00006E  2E04               	decfsz	(??_main+1)^0,f,c
   234   000070  D7FA               	bra	u27
   235                           
   236                           ;PruebaServo.c: 23: a=625;
   237   000072  0E02               	movlw	2
   238   000074  6E02               	movwf	(_a+1)^0,c
   239   000076  0E71               	movlw	113
   240   000078  6E01               	movwf	_a^0,c
   241                           
   242                           ;PruebaServo.c: 24: _delay((unsigned long)((2000)*(1000000/4000.0)));
   243   00007A  0E03               	movlw	3
   244   00007C  6E04               	movwf	(??_main+1)^0,c
   245   00007E  0E8A               	movlw	138
   246   000080  6E03               	movwf	??_main^0,c
   247   000082  0E56               	movlw	86
   248   000084                     u37:
   249   000084  2EE8               	decfsz	wreg,f,c
   250   000086  D7FE               	bra	u37
   251   000088  2E03               	decfsz	??_main^0,f,c
   252   00008A  D7FC               	bra	u37
   253   00008C  2E04               	decfsz	(??_main+1)^0,f,c
   254   00008E  D7FA               	bra	u37
   255   000090  D7D2               	goto	l29
   256   000092                     __end_of_main:
   257                           	callstack 0
   258                           
   259 ;; *************** function _ISR *****************
   260 ;; Defined at:
   261 ;;		line 27 in file "PruebaServo.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;		None
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, status,2, status,0
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   275 ;;      Params:         0       0       0       0       0       0       0       0       0
   276 ;;      Locals:         0       0       0       0       0       0       0       0       0
   277 ;;      Temps:          0       0       0       0       0       0       0       0       0
   278 ;;      Totals:         0       0       0       0       0       0       0       0       0
   279 ;;Total ram usage:        0 bytes
   280 ;; Hardware stack levels used: 1
   281 ;; This function calls:
   282 ;;		Nothing
   283 ;; This function is called by:
   284 ;;		Interrupt level 2
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288                           	psect	intcode
   289   000008                     __pintcode:
   290                           	callstack 0
   291   000008                     _ISR:
   292                           	callstack 30
   293                           
   294                           ;incstack = 0
   295   000008  8205               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   296   00000A  ED5A  F000         	call	int_func,f	;refresh shadow registers
   297                           
   298                           	psect	intcode_body
   299   0000B4                     __pintcode_body:
   300                           	callstack 30
   301   0000B4                     int_func:
   302                           	callstack 30
   303   0000B4  0006               	pop		; remove dummy address from shadow register refresh
   304                           
   305                           ;PruebaServo.c: 28: TMR1IF=0;
   306   0000B6  909E               	bcf	3998,0,c	;volatile
   307                           
   308                           ;PruebaServo.c: 29: TMR1=60536;
   309   0000B8  0EEC               	movlw	236
   310   0000BA  6ECF               	movwf	207,c	;volatile
   311   0000BC  0E78               	movlw	120
   312   0000BE  6ECE               	movwf	206,c	;volatile
   313                           
   314                           ;PruebaServo.c: 30: CCPR1=60536+a;
   315   0000C0  0E78               	movlw	120
   316   0000C2  2401               	addwf	_a^0,w,c
   317   0000C4  6EBE               	movwf	190,c	;volatile
   318   0000C6  0EEC               	movlw	236
   319   0000C8  2002               	addwfc	(_a+1)^0,w,c
   320   0000CA  6EBF               	movwf	191,c	;volatile
   321                           
   322                           ;PruebaServo.c: 31: CCP1CON=0b00001001;
   323   0000CC  0E09               	movlw	9
   324   0000CE  6EBD               	movwf	189,c	;volatile
   325   0000D0  9205               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   326   0000D2  0011               	retfie		f
   327   0000D4                     __end_of_ISR:
   328                           	callstack 0
   329   000000                     
   330                           	psect	rparam
   331   000000                     
   332                           	psect	temp
   333   000005                     btemp:
   334                           	callstack 0
   335   000005                     	ds	1
   336   000000                     int$flags	set	btemp
   337   000000                     wtemp8	set	btemp+1
   338   000000                     ttemp5	set	btemp+1
   339   000000                     ttemp6	set	btemp+4
   340   000000                     ttemp7	set	btemp+8
   341                           
   342                           	psect	idloc
   343                           
   344                           ;Config register IDLOC0 @ 0x200000
   345                           ;	unspecified, using default values
   346   200000                     	org	2097152
   347   200000  FF                 	db	255
   348                           
   349                           ;Config register IDLOC1 @ 0x200001
   350                           ;	unspecified, using default values
   351   200001                     	org	2097153
   352   200001  FF                 	db	255
   353                           
   354                           ;Config register IDLOC2 @ 0x200002
   355                           ;	unspecified, using default values
   356   200002                     	org	2097154
   357   200002  FF                 	db	255
   358                           
   359                           ;Config register IDLOC3 @ 0x200003
   360                           ;	unspecified, using default values
   361   200003                     	org	2097155
   362   200003  FF                 	db	255
   363                           
   364                           ;Config register IDLOC4 @ 0x200004
   365                           ;	unspecified, using default values
   366   200004                     	org	2097156
   367   200004  FF                 	db	255
   368                           
   369                           ;Config register IDLOC5 @ 0x200005
   370                           ;	unspecified, using default values
   371   200005                     	org	2097157
   372   200005  FF                 	db	255
   373                           
   374                           ;Config register IDLOC6 @ 0x200006
   375                           ;	unspecified, using default values
   376   200006                     	org	2097158
   377   200006  FF                 	db	255
   378                           
   379                           ;Config register IDLOC7 @ 0x200007
   380                           ;	unspecified, using default values
   381   200007                     	org	2097159
   382   200007  FF                 	db	255
   383                           
   384                           	psect	config
   385                           
   386                           ;Config register CONFIG1L @ 0x300000
   387                           ;	unspecified, using default values
   388                           ;	PLL Prescaler Selection bits
   389                           ;	PLLDIV = 0x0, unprogrammed default
   390                           ;	System Clock Postscaler Selection bits
   391                           ;	CPUDIV = 0x0, unprogrammed default
   392                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   393                           ;	USBDIV = 0x0, unprogrammed default
   394   300000                     	org	3145728
   395   300000  00                 	db	0
   396                           
   397                           ;Config register CONFIG1H @ 0x300001
   398                           ;	Oscillator Selection bits
   399                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
   400                           ;	Fail-Safe Clock Monitor Enable bit
   401                           ;	FCMEN = 0x0, unprogrammed default
   402                           ;	Internal/External Oscillator Switchover bit
   403                           ;	IESO = 0x0, unprogrammed default
   404   300001                     	org	3145729
   405   300001  09                 	db	9
   406                           
   407                           ;Config register CONFIG2L @ 0x300002
   408                           ;	unspecified, using default values
   409                           ;	Power-up Timer Enable bit
   410                           ;	PWRT = 0x1, unprogrammed default
   411                           ;	Brown-out Reset Enable bits
   412                           ;	BOR = 0x3, unprogrammed default
   413                           ;	Brown-out Reset Voltage bits
   414                           ;	BORV = 0x3, unprogrammed default
   415                           ;	USB Voltage Regulator Enable bit
   416                           ;	VREGEN = 0x0, unprogrammed default
   417   300002                     	org	3145730
   418   300002  1F                 	db	31
   419                           
   420                           ;Config register CONFIG2H @ 0x300003
   421                           ;	Watchdog Timer Enable bit
   422                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   423                           ;	Watchdog Timer Postscale Select bits
   424                           ;	WDTPS = 0xF, unprogrammed default
   425   300003                     	org	3145731
   426   300003  1E                 	db	30
   427                           
   428                           ; Padding undefined space
   429   300004                     	org	3145732
   430   300004  FF                 	db	255
   431                           
   432                           ;Config register CONFIG3H @ 0x300005
   433                           ;	unspecified, using default values
   434                           ;	CCP2 MUX bit
   435                           ;	CCP2MX = 0x1, unprogrammed default
   436                           ;	PORTB A/D Enable bit
   437                           ;	PBADEN = 0x1, unprogrammed default
   438                           ;	Low-Power Timer 1 Oscillator Enable bit
   439                           ;	LPT1OSC = 0x0, unprogrammed default
   440                           ;	MCLR Pin Enable bit
   441                           ;	MCLRE = 0x1, unprogrammed default
   442   300005                     	org	3145733
   443   300005  83                 	db	131
   444                           
   445                           ;Config register CONFIG4L @ 0x300006
   446                           ;	unspecified, using default values
   447                           ;	Stack Full/Underflow Reset Enable bit
   448                           ;	STVREN = 0x1, unprogrammed default
   449                           ;	Single-Supply ICSP Enable bit
   450                           ;	LVP = 0x1, unprogrammed default
   451                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   452                           ;	ICPRT = 0x0, unprogrammed default
   453                           ;	Extended Instruction Set Enable bit
   454                           ;	XINST = 0x0, unprogrammed default
   455                           ;	Background Debugger Enable bit
   456                           ;	DEBUG = 0x1, unprogrammed default
   457   300006                     	org	3145734
   458   300006  85                 	db	133
   459                           
   460                           ; Padding undefined space
   461   300007                     	org	3145735
   462   300007  FF                 	db	255
   463                           
   464                           ;Config register CONFIG5L @ 0x300008
   465                           ;	unspecified, using default values
   466                           ;	Code Protection bit
   467                           ;	CP0 = 0x1, unprogrammed default
   468                           ;	Code Protection bit
   469                           ;	CP1 = 0x1, unprogrammed default
   470                           ;	Code Protection bit
   471                           ;	CP2 = 0x1, unprogrammed default
   472                           ;	Code Protection bit
   473                           ;	CP3 = 0x1, unprogrammed default
   474   300008                     	org	3145736
   475   300008  0F                 	db	15
   476                           
   477                           ;Config register CONFIG5H @ 0x300009
   478                           ;	unspecified, using default values
   479                           ;	Boot Block Code Protection bit
   480                           ;	CPB = 0x1, unprogrammed default
   481                           ;	Data EEPROM Code Protection bit
   482                           ;	CPD = 0x1, unprogrammed default
   483   300009                     	org	3145737
   484   300009  C0                 	db	192
   485                           
   486                           ;Config register CONFIG6L @ 0x30000A
   487                           ;	unspecified, using default values
   488                           ;	Write Protection bit
   489                           ;	WRT0 = 0x1, unprogrammed default
   490                           ;	Write Protection bit
   491                           ;	WRT1 = 0x1, unprogrammed default
   492                           ;	Write Protection bit
   493                           ;	WRT2 = 0x1, unprogrammed default
   494                           ;	Write Protection bit
   495                           ;	WRT3 = 0x1, unprogrammed default
   496   30000A                     	org	3145738
   497   30000A  0F                 	db	15
   498                           
   499                           ;Config register CONFIG6H @ 0x30000B
   500                           ;	unspecified, using default values
   501                           ;	Configuration Register Write Protection bit
   502                           ;	WRTC = 0x1, unprogrammed default
   503                           ;	Boot Block Write Protection bit
   504                           ;	WRTB = 0x1, unprogrammed default
   505                           ;	Data EEPROM Write Protection bit
   506                           ;	WRTD = 0x1, unprogrammed default
   507   30000B                     	org	3145739
   508   30000B  E0                 	db	224
   509                           
   510                           ;Config register CONFIG7L @ 0x30000C
   511                           ;	unspecified, using default values
   512                           ;	Table Read Protection bit
   513                           ;	EBTR0 = 0x1, unprogrammed default
   514                           ;	Table Read Protection bit
   515                           ;	EBTR1 = 0x1, unprogrammed default
   516                           ;	Table Read Protection bit
   517                           ;	EBTR2 = 0x1, unprogrammed default
   518                           ;	Table Read Protection bit
   519                           ;	EBTR3 = 0x1, unprogrammed default
   520   30000C                     	org	3145740
   521   30000C  0F                 	db	15
   522                           
   523                           ;Config register CONFIG7H @ 0x30000D
   524                           ;	unspecified, using default values
   525                           ;	Boot Block Table Read Protection bit
   526                           ;	EBTRB = 0x1, unprogrammed default
   527   30000D                     	org	3145741
   528   30000D  40                 	db	64
   529                           tosu	equ	0xFFF
   530                           tosh	equ	0xFFE
   531                           tosl	equ	0xFFD
   532                           stkptr	equ	0xFFC
   533                           pclatu	equ	0xFFB
   534                           pclath	equ	0xFFA
   535                           pcl	equ	0xFF9
   536                           tblptru	equ	0xFF8
   537                           tblptrh	equ	0xFF7
   538                           tblptrl	equ	0xFF6
   539                           tablat	equ	0xFF5
   540                           prodh	equ	0xFF4
   541                           prodl	equ	0xFF3
   542                           indf0	equ	0xFEF
   543                           postinc0	equ	0xFEE
   544                           postdec0	equ	0xFED
   545                           preinc0	equ	0xFEC
   546                           plusw0	equ	0xFEB
   547                           fsr0h	equ	0xFEA
   548                           fsr0l	equ	0xFE9
   549                           wreg	equ	0xFE8
   550                           indf1	equ	0xFE7
   551                           postinc1	equ	0xFE6
   552                           postdec1	equ	0xFE5
   553                           preinc1	equ	0xFE4
   554                           plusw1	equ	0xFE3
   555                           fsr1h	equ	0xFE2
   556                           fsr1l	equ	0xFE1
   557                           bsr	equ	0xFE0
   558                           indf2	equ	0xFDF
   559                           postinc2	equ	0xFDE
   560                           postdec2	equ	0xFDD
   561                           preinc2	equ	0xFDC
   562                           plusw2	equ	0xFDB
   563                           fsr2h	equ	0xFDA
   564                           fsr2l	equ	0xFD9
   565                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       5        0.0%
BANK0               A0      0       0       6        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2       4       1        4.3%
BITBIGSFRl          34      0       0      26        0.0%
BITBIGSFRhhl        22      0       0      22        0.0%
BITBIGSFRhllh       1E      0       0      24        0.0%
BITBIGSFRhhh         D      0       0      21        0.0%
BITBIGSFRhlh         D      0       0      23        0.0%
BITBIGSFRhlll        8      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4       3        0.0%
DATA                 0      0       4       4        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jun 01 17:23:05 2023

                      _a 0001                       l29 0036                       u17 0048  
                     u27 0066                       u37 0084                      _GIE 007F97  
                    _ISR 0008                      wreg 000FE8                     ?_ISR 0003  
                   _PEIE 007F96                     _TMR1 000FCE                     _main 0012  
                   btemp 0005                     start 000E             ___param_bank 000000  
                  ??_ISR 0003                    ?_main 0003                    _CCPR1 000FBE  
                  _T1CON 000FCD                    tablat 000FF5                    ttemp5 0006  
                  ttemp6 0009                    ttemp7 000D                    wtemp8 0006  
        __initialization 0092             __end_of_main 0092                   ??_main 0003  
          __activetblptr 000000                   _TMR1IE 007CE8                   _TMR1IF 007CF0  
                 _TMR1ON 007E68                   _TRISC2 007CA2                   isa$std 000001  
           __pdataCOMRAM 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 00AA  
          ___rparam_used 000001           __pcstackCOMRAM 0003                  _CCP1CON 000FBD  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0092  
                __ramtop 0800                  __ptext0 0012           __pintcode_body 00B4  
   end_of_initialization 00AA                  int_func 00B4            __pidataCOMRAM 00D4  
    start_initialization 0092              __end_of_ISR 00D4                __pintcode 0008  
               __Hrparam 0000                 __Lrparam 0000                 isa$xinst 000000  
               int$flags 0005                 intlevel2 0000  
